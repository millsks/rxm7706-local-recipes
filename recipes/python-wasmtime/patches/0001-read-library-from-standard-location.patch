From 4aca7d7638ba1cc00e380ba614badf8f1479bcd6 Mon Sep 17 00:00:00 2001
From: Marek Waszkiewicz <mwaszkiewicz@anaconda.com>
Date: Mon, 14 Aug 2023 10:28:33 +0200
Subject: [PATCH] read library from standard anaconda location

---
 wasmtime/_ffi.py | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/wasmtime/_ffi.py b/wasmtime/_ffi.py
index 2ff1001..f0d7968 100644
--- a/wasmtime/_ffi.py
+++ b/wasmtime/_ffi.py
@@ -9,11 +9,11 @@ if sys.maxsize <= 2**32:
     raise RuntimeError("wasmtime only works on 64-bit platforms right now")
 
 if sys.platform == 'linux':
-    libname = '_libwasmtime.so'
+    libname = 'libwasmtime.so'
 elif sys.platform == 'win32':
-    libname = '_wasmtime.dll'
+    libname = 'wasmtime.dll'
 elif sys.platform == 'darwin':
-    libname = '_libwasmtime.dylib'
+    libname = 'libwasmtime.dylib'
 else:
     raise RuntimeError("unsupported platform `{}` for wasmtime".format(sys.platform))
 
@@ -25,10 +25,7 @@ if machine == 'arm64':
 if machine != 'x86_64' and machine != 'aarch64':
     raise RuntimeError("unsupported architecture for wasmtime: {}".format(machine))
 
-filename = os.path.join(os.path.dirname(__file__), sys.platform + '-' + machine, libname)
-if not os.path.exists(filename):
-    raise RuntimeError("precompiled wasmtime binary not found at `{}`".format(filename))
-dll = cdll.LoadLibrary(filename)
+dll = cdll.LoadLibrary(libname)
 
 WASM_I32 = c_uint8(0)
 WASM_I64 = c_uint8(1)
-- 
2.25.1

